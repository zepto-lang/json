(defprotocol jsonify (->json 1))

(defimpl jsonify hash-map?
         ((->json
            ($ (let ((keys (hash:keys %))
                     (make-element
                       (lambda (key)
                         (++ (->json key) ": " (->json (% key))))))
                (++ "{" (string:join (map make-element keys) ", ") "}"))))))
(defimpl jsonify list?
        ((->json ($ (++ "[" (string:join (map ->json %) ", ") "]")))))
(define json-num? ($ (or (integer? %) (float? %))))
(defimpl jsonify json-num? ((->json number->string)))
(defimpl jsonify string?
         ((->json ($ (++ "\"" (regex:gsub r/"/ "\\\"" %) "\"")))))
